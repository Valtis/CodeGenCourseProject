program invalid_expressions;
begin
	var i : integer;
	var s : string;
	var r : real;
	var b : boolean;
	
	undeclared := 4;
	true := 5;
	false := 3;

	i := "hello";
	i := 3.123;
	i := true;
	i := false;
	
	s := 1;
	s := 3.123;
	s := true;
	s := false;

	r := 1;
	r := "hello";
	r := true;
	r := false;

	b := 1;
	b := "hello";
	b := 123.456;

	i := "hello" + 1;	
	i := true + 123.456;
	i := i + s;
	i := true + false;

	s := 2 - 1.234;
	s := "a" - s;

	b := 1 * true;
	b := true * false;

	r := 1 / 23.45;
	r := "hello" / "world";

	i := i % 123.4;
	i := 1.2 % 3.4;

	i := i = "hello";
	i := false = 123.4;

	i := 1 <> "hello";
	b := true <> 1.23;

	i := 1 < "hello";
	i := 1324.12 < true;

	r := 1 <= "hello";
	r := 1324.12 <= true;

	r := 1 >= "hello";
	r := 1324.12 >= true;
	
	r := 1 > "hello";
	r := 1324.12 > true;

	i := 1 and "foo";
	i := 1.23 and true;
	i := 1 and 2;
	
	i := 1 or "foo";
	i := 1.23 or true;
	i := 1 or 2;
	
	i := not 3;
	i := not "hello";
	i := not 21.34;
		
	i := -"hello";
	i := -true;
	
	s := +"hello";
	s := +false;

	i := 12.3  * (1.235 - 12.6e-3);
	i := "hello" + (1 * 2);
		
	var ai : array["hello"] of integer;
	var ar : array[true and false] of real;
	var as : array[1.23] of string;
	var ab : array[1 + "hello"] of boolean;	
	
	var ai2 : array[1] of integer;
	var ar2 : array[2] of real;
	var as2 : array[3] of string;
	var ab2 : array[4] of boolean;

	ai2[45] := "hello";
	ar2[12] := true;
	as2[1] := 543;
	ab2[14] := 1.24;

	i[452] := 4;
	r[12] := 12.34;
	s[124] := "hello";
	b[2] := true;
	undeclared[43] := 4;
	
	ai["hello"] := 43;
	ar2[134.453] := 143.2;
	as[true] := "hello"; 
	ab2[13.4 * 2] := "false";

	ai := 4;
	as2 := "true";
	ab := 1;
	ar2 := false;
	
	i := ai2[12123.4] + i;
	r := as[4];
	s := ab2["false"] + 2;
	s := i[2] - 34;
	b := undeclared[234] * 3;
	
	true[4] := 2;
	false[4] := 2;

	var true : integer;
	var false : integer;

	b := true;
	b := false;
	b := true and false;

	i := ("hello" * 2.3) - "world";
	i := "hello" = undeclared;

	begin
		var i : boolean;
		i := true;
	end;

	i := 4.2 + ai2.size;
	i := i.size;
	i := undeclared.size;	
end.