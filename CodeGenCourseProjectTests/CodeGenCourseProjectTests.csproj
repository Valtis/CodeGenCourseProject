<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{6FA0FEBC-3AB4-4E0E-9AC1-5A52B3F13A07}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CodeGenCourseProjectTests</RootNamespace>
    <AssemblyName>CodeGenCourseProjectTests</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="AST\ArrayIndexNodeTests.cs" />
    <Compile Include="AST\IdentifierNodeTests.cs" />
    <Compile Include="AST\IntegerNodeTests.cs" />
    <Compile Include="AST\NegateNodeTests.cs" />
    <Compile Include="AST\NotNodeTests.cs" />
    <Compile Include="AST\ProgramNodeTests.cs" />
    <Compile Include="AST\RealNodeTests.cs" />
    <Compile Include="AST\StringNodeTests.cs" />
    <Compile Include="AST\VariableAssignmentNodeTests.cs" />
    <Compile Include="CFG\CFGGeneratorTests.cs" />
    <Compile Include="CFG\Analysis\ControlFlowAnalyzerTests.cs" />
    <Compile Include="Codegen\CCodeGeneratorTests.cs" />
    <Content Include="CFG\Analysis\call_function_that_captures_from_other_function.txt" />
    <Content Include="CFG\Analysis\capture_function_parameter.txt" />
    <Content Include="CFG\bug_1.txt" />
    <Content Include="Codegen\array_assign.txt" />
    <Content Include="Codegen\array_indexes_as_args.txt" />
    <Content Include="Codegen\array_index_captured_ref.txt" />
    <Content Include="Codegen\array_lower_bound_check.txt" />
    <Content Include="Codegen\array_size.txt" />
    <Content Include="Codegen\boolean_expressions.txt" />
    <Content Include="Codegen\captured_array_as_argument.txt" />
    <Content Include="Codegen\false_assert.txt" />
    <Content Include="Codegen\gc.txt" />
    <Content Include="Codegen\gc2.txt" />
    <Content Include="Codegen\hello_world.txt" />
    <Content Include="Codegen\integer_expressions.txt" />
    <Content Include="Codegen\left_to_right_evaluation.txt" />
    <Content Include="Codegen\negative_array_size.txt" />
    <Content Include="Codegen\non_reference_array_parameters.txt" />
    <Content Include="Codegen\read.txt" />
    <Content Include="Codegen\real_expressions.txt" />
    <Content Include="Codegen\recursive_factorial.txt" />
    <Content Include="Codegen\non_reference_non_array_parameters.txt" />
    <Compile Include="Lexing\LexerTests.cs" />
    <Compile Include="Lexing\StringTokenTests.cs" />
    <Compile Include="Parsing\ParserTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="SemanticChecking\SemanticCheckerTests.cs" />
    <Compile Include="TAC\TACGeneratorTests.cs" />
    <Compile Include="TestHelper.cs" />
    <Compile Include="Tokens\IdentifierTokenTests.cs" />
    <Compile Include="Tokens\IntegerTokenTests.cs" />
    <Compile Include="Tokens\RealTokenTests.cs" />
    <Compile Include="Tokens\StringTokenTests.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\CodeGenCourseProject\CodeGenCourseProject.csproj">
      <Project>{18A626FF-B57F-49AD-AE05-7F6144C32ECC}</Project>
      <Name>CodeGenCourseProject</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="CFG\Analysis\invalid_jumps.txt" />
    <Content Include="CFG\Analysis\invalid_array_indexes.txt" />
    <Content Include="CFG\Analysis\invalid_asserts.txt" />
    <Content Include="CFG\Analysis\invalid_function_calls.txt" />
    <Content Include="CFG\Analysis\invalid_read_call.txt" />
    <Content Include="CFG\Analysis\invalid_returns.txt" />
    <Content Include="CFG\Analysis\invalid_variable_capture.txt" />
    <Content Include="CFG\Analysis\valid_function_calls.txt" />
    <Content Include="CFG\Analysis\valid_function_variable_capture.txt" />
    <Content Include="CFG\Analysis\invalid_functions.txt" />
    <Content Include="CFG\Analysis\invalid_if_branch_only_initialization_with_else_branch.txt" />
    <Content Include="CFG\Analysis\invalid_procedure1.txt" />
    <Content Include="CFG\Analysis\invalid_procedure2.txt" />
    <Content Include="CFG\Analysis\invalid_variable_if_block.txt" />
    <Content Include="CFG\Analysis\invalid_nested_if_statements.txt" />
    <Content Include="CFG\Analysis\invalid_variable_used_in_if_blocks_before_initialization_in_block.txt" />
    <Content Include="CFG\Analysis\invalid_while_statement5.txt" />
    <Content Include="CFG\Analysis\invalid_writeln_call.txt" />
    <Content Include="CFG\Analysis\valid_arrays.txt" />
    <Content Include="CFG\Analysis\valid_functions.txt" />
    <Content Include="CFG\Analysis\valid_read_call.txt" />
    <Content Include="CFG\Analysis\valid_variables_in_procedures.txt" />
    <Content Include="CFG\Analysis\valid_while_statement2.txt" />
    <Content Include="CFG\Analysis\invalid_while_statement1.txt" />
    <Content Include="CFG\Analysis\invalid_while_statement2.txt" />
    <Content Include="CFG\Analysis\invalid_while_statement3.txt" />
    <Content Include="CFG\Analysis\invalid_while_statement4.txt" />
    <Content Include="CFG\Analysis\uninitialized_variable_in_if_condition.txt" />
    <Content Include="CFG\Analysis\valid_if_branch_initialization_with_dead_else.txt" />
    <Content Include="CFG\Analysis\valid_nested_if_statements.txt" />
    <Content Include="CFG\Analysis\valid_while_statement.txt" />
    <Content Include="CFG\Analysis\valid_while_statement3.txt" />
    <Content Include="CFG\functions.txt" />
    <Content Include="CFG\nested_if_statements.txt" />
    <Content Include="CFG\if_else_statement.txt" />
    <Content Include="CFG\if_statement_with_false_condition.txt" />
    <Content Include="CFG\if_statement_with_true_condition.txt" />
    <Content Include="CFG\procedures.txt" />
    <Content Include="CFG\simple_if_statement.txt" />
    <Content Include="CFG\no_branching.txt" />
    <Content Include="CFG\Analysis\invalid_if_branch_only_initialization.txt" />
    <Content Include="CFG\Analysis\initialized_variable_no_branches.txt" />
    <Content Include="CFG\Analysis\self_assignment.txt" />
    <Content Include="CFG\Analysis\uninitialized_variable_no_branches.txt" />
    <Content Include="CFG\Analysis\usage_before_assignment.txt" />
    <Content Include="CFG\Analysis\valid_else_branch_only_initialization.txt" />
    <Content Include="CFG\Analysis\valid_if_branch_only_initialization.txt" />
    <Content Include="CFG\Analysis\valid_if_else_initialization.txt" />
    <Content Include="CFG\while_and_if_statements.txt" />
    <Content Include="CFG\while_statement.txt" />
    <Content Include="CFG\while_statement_with_false_condition.txt" />
    <Content Include="CFG\while_statement_with_true_condition.txt" />
    <Content Include="Codegen\iterative_factorial.txt" />
    <Content Include="Codegen\iterative_fibonacci.txt" />
    <Content Include="Codegen\recursive_fibonacci.txt" />
    <Content Include="Codegen\reference_array_parameters.txt" />
    <Content Include="Codegen\reference_non_array_parameters.txt" />
    <Content Include="Codegen\string_expressions.txt" />
    <Content Include="Codegen\array_upper_bound_check.txt" />
    <Content Include="Codegen\true_assert.txt" />
    <Content Include="Codegen\variable_capture.txt" />
    <Content Include="Codegen\writeln.txt" />
    <Content Include="Lexing\backtracking.txt" />
    <Content Include="Lexing\indentation.txt" />
    <Content Include="Lexing\invalid_comments.txt" />
    <Content Include="Lexing\invalid_letters.txt" />
    <Content Include="Lexing\invalid_numbers.txt" />
    <Content Include="Lexing\invalid_strings.txt" />
    <Content Include="Lexing\valid_comments.txt" />
    <Content Include="Lexing\valid_identifiers.txt" />
    <Content Include="Lexing\valid_keywords.txt" />
    <Content Include="Lexing\valid_numbers.txt" />
    <Content Include="Lexing\valid_operators.txt" />
    <Content Include="Lexing\valid_strings.txt" />
    <Content Include="Parsing\bug_1.txt" />
    <Content Include="Parsing\invalid_assert_statements.txt" />
    <Content Include="Parsing\invalid_function_declarations.txt" />
    <Content Include="Parsing\invalid_if_statements.txt" />
    <Content Include="Parsing\invalid_nested_blocks.txt" />
    <Content Include="Parsing\invalid_expressions.txt" />
    <Content Include="Parsing\invalid_procedure_declarations.txt" />
    <Content Include="Parsing\invalid_program_with_missing_end_dot.txt" />
    <Content Include="Parsing\invalid_function_calls.txt" />
    <Content Include="Parsing\invalid_minimal_program_1.txt" />
    <Content Include="Parsing\invalid_minimal_program_2.txt" />
    <Content Include="Parsing\invalid_program_with_missing_dot.txt" />
    <Content Include="Parsing\invalid_program_with_missing_semicolon_in_mid_statement.txt" />
    <Content Include="Parsing\invalid_return_statements.txt" />
    <Content Include="Parsing\invalid_tokens_after_the_end_of_program.txt" />
    <Content Include="Parsing\invalid_variable_declarations.txt" />
    <Content Include="Parsing\invalid_while_statements.txt" />
    <Content Include="Parsing\valid_assert_statements.txt" />
    <Content Include="Parsing\valid_expressions.txt" />
    <Content Include="Parsing\valid_function_declarations.txt" />
    <Content Include="Parsing\valid_function_calls.txt" />
    <Content Include="Parsing\valid_if_statements.txt" />
    <Content Include="Parsing\valid_minimal_program_without_trailing_semicolon.txt" />
    <Content Include="Parsing\valid_minimal_program.txt" />
    <Content Include="Parsing\valid_minimal_program_with_trailing_semicolon.txt" />
    <Content Include="Parsing\valid_nested_blocks.txt" />
    <Content Include="Parsing\valid_procedure_declarations.txt" />
    <Content Include="Parsing\valid_read_statements.txt" />
    <Content Include="Parsing\valid_return_statements.txt" />
    <Content Include="Parsing\valid_variable_declarations.txt" />
    <Content Include="Parsing\valid_while_statements.txt" />
    <Content Include="Parsing\valid_write_statements.txt" />
    <Content Include="Codegen\assign_reference_value.txt" />
    <Content Include="SemanticChecking\invalid_assert_statements.txt" />
    <Content Include="SemanticChecking\invalid_expressions.txt" />
    <Content Include="SemanticChecking\invalid_if_statements.txt" />
    <Content Include="SemanticChecking\invalid_procedures_and_functions.txt" />
    <Content Include="SemanticChecking\invalid_ref_args.txt" />
    <Content Include="SemanticChecking\invalid_variable_declarations.txt" />
    <Content Include="SemanticChecking\invalid_while_statements.txt" />
    <Content Include="SemanticChecking\valid_assert_statements.txt" />
    <Content Include="SemanticChecking\valid_expressions.txt" />
    <Content Include="SemanticChecking\valid_if_statements.txt" />
    <Content Include="SemanticChecking\valid_procedures_and_functions.txt" />
    <Content Include="SemanticChecking\valid_variable_declarations.txt" />
    <Content Include="SemanticChecking\valid_while_statements.txt" />
    <Content Include="TAC\asserts.txt" />
    <Content Include="TAC\expressions.txt" />
    <Content Include="TAC\functions_and_procedures.txt" />
    <Content Include="TAC\if_statements.txt" />
    <Content Include="TAC\while_statements.txt" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="CFG\Analysis\valid_writeln_call.txt" />
  </ItemGroup>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>